<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <script
      src="https://code.jquery.com/jquery-3.7.1.min.js"
      integrity="sha256-/JqT3SQfawRcv/BIHPThkBvs0OEvtFFmqPF/lYI/Cxo="
      crossorigin="anonymous"
    ></script>

    <script
      src="https://code.jquery.com/ui/1.13.2/jquery-ui.min.js"
      integrity="sha256-lSjKY0/srUM9BE3dPm+c4fBo1dky2v27Gdjm2uoZaL0="
      crossorigin="anonymous"
    ></script>

    <!-- axios cdn -->
    <script src="https://unpkg.com/axios/dist/axios.min.js"></script>

    <style>
      div.result {
        font-size: 2rem;
        font-weight: 700;
      }
    </style>
    <title>Dynamic Form</title>
  </head>
  <body>
    <h1>동적 Form 전송 연습하기!</h1>

    <!-- 이름, 성별(라디오 버튼을 입력하는 폼) -->
    <form name="register">
      <label for="name">이름</label>
      <input type="text" name="name" id="name" required />
      <br />

      성별
      <input type="radio" name="gender" value="m" id="male" required />
      <label for="male">남성</label>
      <input type="radio" name="gender" value="f" id="female" />
      <label for="female">여성</label>
      <br /><br />
      <button type="button" onclick="ajaxGet()">Ajax Get 제출</button>
      <button type="button" onclick="ajaxPost()">Ajax Post 제출</button>
      <br />
      <button type="button" onclick="axiosGet()">Axios Get 제출</button>
      <button type="button" onclick="axiosPost()">Axios Post 제출</button>
      <br>
      <button type="button" onclick="fetchGet()">Fetch Get 제출</button>
      <button type="button" onclick="fetchPost()">Fetch Post 제출</button>

      <div class="result"></div>
    </form>

    <script>
      // result 선언
      const resultBox = document.querySelector(".result");
      function ajaxGet() {
        const form = document.forms["register"];
        console.log(form);
        console.log(form.name);
        console.log(form.gender);

        const data = {
          name: form.name.value,
          gender: form.gender.value,
        };
        console.log("data>", data);

        // Ajax로 서버에 Get요청 보내기
        $.ajax({
          type: "get", // 요청의 종류 (=form의 method 속성)
          url: "/ajax", // 요청의 경로 (=form의 action 속성)
          data: data, // 요청에 보낼 데이터 (서버가 받게 될 값)
          success: function (data) {
            // 요청이 성공적으로 수행되었을 때 실행할 함수
            console.log(data);
            resultBox.textContent = `Get /ajax 요청 완료! ${data.name}님은 ${data.gender}이에요.`;
          },
        });
      }

      function ajaxPost() {
        const form = document.forms["register"];
        // 서버로 보낼 데이터
        const data = {
          name: form.name.value,
          gender: form.gender.value,
        };

        $.ajax({
          type: "post",
          url: "/ajax",
          data: data,
          success: function (data) {
            resultBox.textContent = `Post /ajax 요청 완료! ${data.name}님은 ${data.gender}이에요.`;
          },
        });
      }

      function axiosGet() {
        const form = document.forms["register"];
        const data = {
          name: form.name.value,
          gender: form.gender.value,
        };

        // 태그의 validation 검사해주는 메소드!!!!!!!
        console.log(form.name.checkValidity());
        // 같은 name으로 묶인 라디오 버튼은 하나만 선택되도 true 반환
        console.log("radio 1", form.gender[0].checkValidity());
        console.log("radio 2", form.gender[1].checkValidity());
        console.log("sf", form.name);
        console.log("sf", form.gender[0]);

        // axios 요청의 결과는 Promise 객체
        // -> then, catch 메서드로 체인지가 가능!
        // -> async await 사용 가능!

        // then catch
        axios({
          method: "get",
          // url: '/axios',
          url: `/axios?name=${data.name}&gender=${data.gender}`, //위 아래를 (116, 118) 한번에 쓰는 기능.
          // params: data // 서버로 보낼 데이터 line 104
        })
          .then((response) => {
            console.log(response);
            resultBox.textContent = `Get/ axios요청 완료! 이름은 ${response.data.name}, 성별은 ${response.data.gender}!`;
          })
          .catch((error) => {
            resultBox.textContent = `${error.response.data}`;
          });
      }

      async function axiosPost() {
        const form = document.forms["register"];
        const data = {
          name: form.name.value,
          gender: form.gender.value,
        };
        try {
            const response = await axios({
                method: "post",
                url: "/axios",
                data: data,
            });
            // if (!form.name.checkValidity() || !form.gender[0].checkValidity()) {
            //   throw Error("둘 다 넣으세욧!")
            // }
          resultBox.textContent = `Get/ axios요청 완료! 이름은 ${response.data.name}, 성별은 ${response.data.gender}!`;
        } catch (error) {
            // resultBox.textContent = error.message;
            console.log(error);
          resultBox.textContent = error.response.data;
        }
      }
    
      function fetchGet() {
        const form = document.forms['register'];
        const data = {
            name: form.name.value,
            gender: form.gender.value
        }

        // fetch(url, options)
        fetch(`/fetch?name=${data.name}&gender=${data.gender}`,
         {method: 'get' // default값. 생략 가능
        }).then(function(response) {
            console.log(response);
            return response.json();
            // 응답 (response) 객체로부터 JSON포맷의 응답 전문을 자바스크립트 객체로 변환
        }).then( function(data) {
          // data변수 : 직전 then 메서드의 리턴값. response.json()
            console.log(data);
            resultBox.textContent =`fetch Get 응답 완료. 당신의 이름은 ${data.name}, 성별은 ${data.gender}`
        }) 
      }

      function fetchPost() {
        const form = document.forms['register'];
        const data = {
            name: form.name.value,
            gender: form.gender.value
        }

        // fetch - post메소드 => options 객체가 반드시 필요함
        fetch('/fetch', {
          // 1. method: post 지정
          // 2. headers: JSON 포맷 사용 선언
          // 3. body: 서버로 보낼 데이터를 담아줌
          method: 'post',
          headers: {'Content-Type' : 'application/json'},
          body: JSON.stringify(data)
          // data: js object
          // JSON.stringify(data): json 형식
        }).then((response) => {
          console.log(response);
          return response.json();
        }).then(function(data) {
          console.log(data);
          resultBox.textContent =`fetch Post 응답 완료. 당신의 이름은 ${data.name}, 성별은 ${data.gender}`
        })
      }
    
    
    </script>
    <a href="/exercise2">exercise2</a>
  </body>
</html>
