<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="stylesheet" href="style.css" />
    <script src="/socket.io/socket.io.js"></script>
    <title>socket.io 실습</title>
  </head>
  <body>
    <main>
        <ul class="container"></ul>
    </main>
    <div class="submit">
      <select name="users" id="users">
      </select>
      <input type="text" id="text" />
      <button onclick="submitText()" type="button">전송</button>
    </div>
    <!-- 실습1 각 버튼 누를 때마다 서버로 메세지 보내기-->
    <!-- <button onclick="sayHello()">HELLO</button>
    <button onclick="sayStudy()">STUDY</button>
    <button onclick="sayBye()">BYE</button> -->
    <script>
      const socket = io.connect();
      const clients = [];
      socket.on("connect", function () {
        console.log("클라이언트 연결 완료 >", socket.id);
      });

      // hello emit
      function submitText() {
        const pElement = document.createElement('p');
        pElement.classList.add('right');
        const gotMsg = document.createElement('span');
        
        if (document.querySelector('select').value === '전체') {
          gotMsg.textContent = `나: ${document.querySelector('#text').value}`;
          gotMsg.classList.add('mymsg');
          pElement.appendChild(gotMsg);
          document.querySelector('.container').appendChild(pElement);
          socket.emit("text", { who: socket.id, msg: `${document.querySelector('#text').value}`});
          document.querySelector('#text').value = '';
        } else {
          gotMsg.textContent = `(${document.querySelector('#users').value}님에게) 나: ${document.querySelector('#text').value}`;
          pElement.appendChild(gotMsg);
          document.querySelector('.container').appendChild(pElement);
          gotMsg.classList.add('secret-msg');
          socket.emit("toText", { who: socket.id, msg: `${document.querySelector('#text').value}`, to: `${document.querySelector('#users').value}`});
          document.querySelector('#text').value = '';
        }
      }

      socket.on('notice', function(data) {
        // clients.push(socket.id);
        const divElement = document.createElement('div');
        divElement.classList.add('introduce');
        divElement.textContent = data.msg;
        document.querySelector('main').prepend(divElement);
        console.log(data.sockets);

        document.querySelector('#users').innerHTML = '';
        const optionEle = document.createElement('option');
          optionEle.value = '전체';
          optionEle.textContent = '전체';
          document.querySelector('#users').appendChild(optionEle);
        for (const socket of data.sockets) {
          const optionElement = document.createElement('option');
          optionElement.value = socket;
          optionElement.textContent = socket;
          document.querySelector('#users').appendChild(optionElement);
        }
      })

      socket.on('brod', function(data) {
        const pElement = document.createElement('p');
        pElement.classList.add('left');
        const gotMsg = document.createElement('span');
        gotMsg.textContent = `${data.who} : ${data.msg}`;
        gotMsg.classList.add('someones-msg')
        pElement.appendChild(gotMsg);
        document.querySelector('.container').appendChild(pElement);
      })

      socket.on('toClient', function(data) {
        const pElement = document.createElement('p');
        pElement.classList.add('left');
        const gotMsg = document.createElement('span');
        gotMsg.textContent = `${data.who} : ${data.msg}`;
        gotMsg.classList.add('secret-msg');
        pElement.appendChild(gotMsg);
        document.querySelector('.container').appendChild(pElement);
      });

    </script>
  </body>
</html>
